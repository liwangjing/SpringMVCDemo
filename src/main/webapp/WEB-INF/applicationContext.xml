<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <import resource="hsql-config.xml"/>

    <!-- the parent application context definition for the spring app application-->
    <bean id="productDao" class="com.jing.repository.SimpleProductDao">
        <!--<property name="dataSource" ref="dataSource"/>-->
    </bean>

    <bean id="productManager" class="com.jing.service.SimpleProductManager">
        <property name="productDao" ref="productDao"/>
    </bean>

    <bean id="aopService" class="com.jing.aspects.AOPService">
        <constructor-arg value="#{T(System).out}"/>
    </bean>

    <aop:config>
        <aop:aspect ref="aopService">

            <!-- method 1, share the same pointcut, then you can declare one pointcut, then refer it as point-ref=id  -->
            <aop:pointcut id="increase" expression="execution(* *com.jing.service.SimpleProductManager.getProducts(..))"/>
            <aop:before
                    pointcut-ref="increase"
                    method="before"/>
            <aop:after
                    pointcut-ref="increase"
                    method="after"/>

            <!--<aop:around pointcut-ref="increase"-->
                    <!--method="greetings"/>-->

            <aop:after
                    pointcut="execution(* *com.jing.service.SimpleProductManager.increasePrice(..))"
                    method="finish"/>

        </aop:aspect>
    </aop:config>

    <!--configuration for StorageDummy-->

    <!--enable the AspectJ auto-proxying-->
    <aop:aspectj-autoproxy/>
    <bean class = "com.jing.aspects.StorageDummy">
        <constructor-arg value="#{T(System).out}"/>
    </bean>

</beans>
